{
	"name": "fpga-support",
	"displayName": "FPGA Develop Support",
	"description": "Language support for TCL&HDL",
	"publisher": "sterben",
	"homepage": "https://github.com/Bestduan/fpga_support_plug",
	"version": "0.1.12",
	"repository": {
		"type": "git",
		"url": "https://github.com/Bestduan/fpga_support_plug.git"
	},
	"bugs": {
		"url": "https://github.com/Bestduan/fpga_support_plug/issues"
	},
	"engines": {
		"vscode": "^1.42.1"
	},
	"categories": [
		"Extension Packs",
		"Programming Languages",
		"Snippets"
	],
	"icon": "images/FPGAs.png",
	"activationEvents": [
		"onLanguage:json",
		"onLanguage:tcl",
		"onLanguage:vhdl",
		"onLanguage:verilog",
		"onLanguage:systemverilog",
		"onCommand:TOOL.Gen_Property",
		"onCommand:TOOL.Gen_BOOT",
		"onCommand:TOOL.clean",
		"onCommand:TOOL.SerialPort",
		"onCommand:FPGA.instance",
		"onCommand:FPGA.testbench",
		"onCommand:FPGA.Init",
		"onCommand:FPGA.top",
		"onCommand:FPGA.Update",
		"onCommand:FPGA.Sim",
		"onCommand:FPGA.Synth",
		"onCommand:FPGA.Impl",
		"onCommand:FPGA.Gen_Bit",
		"onCommand:FPGA.Build",
		"onCommand:FPGA.Program",
		"onCommand:FPGA.GUI",
		"onCommand:FPGA.exit",
		"onCommand:FPGA.addDevice",
		"onCommand:FPGA.delDevice",
		"onCommand:FPGA.Overwrite testbench",
		"onCommand:FPGA.Overwrite bd_file",
		"onCommand:FPGA.Add bd_file",
		"onCommand:FPGA.Delete bd_file",
		"onCommand:SDK.Init",
		"onCommand:SDK.Build",
		"onCommand:SDK.Download"
	],
	"main": "./src/extension",
	"contributes": {
		"configuration": {
			"title": "HDL configuration",
			"properties": {
				"HDL.disableIndexing": {
					"type": "boolean",
					"default": true,
					"description": "Disable the automatic indexing when opening a folder or workspace"
				},
				"HDL.parallelProcessing": {
					"type": "integer",
					"default": 10,
					"description": "This is the number of files it should attempt to process in parallel. Processing consist of opening found files and perform matching to find symbols."
				},
				"HDL.excludeIndexing": {
					"type": "string",
					"default": "insert globPattern here",
					"description": "Exclude files from indexing by a globPattern"
				},
				"HDL.forceFastIndexing": {
					"type": "boolean",
					"default": true,
					"description": "Force indexing to use fast regex parsing"
				},
				"HDL.documentSymbolsPrecision": {
					"type": "string",
					"enum": [
						"full",
						"declaration",
						"fast"
					],
					"default": "full",
					"description": "The level of detail the parser should look for when looking for symbols"
				},
				"HDL.linting.linter": {
					"scope": "window",
					"type": "string",
					"enum": [
						"xvlog",
						"iverilog",
						"verilator",
						"modelsim",
						"none"
					],
					"default": "xvlog",
					"description": "Select the verilog linter. Possible values are 'iverilog', 'verilator', xvlog' or 'none'"
				},
				"HDL.linting.iverilog.arguments": {
					"scope": "window",
					"type": "string",
					"default": "",
					"description": "Add Icarus Verilog arguments here (like macros). They will be added to Icarus Verilog while linting (The command \"-t null\" will be added by the linter by default)"
				},
				"HDL.linting.iverilog.runAtFileLocation": {
					"scope": "window",
					"type": "boolean",
					"default": false,
					"description": "If enabled, Icarus Verilog will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default."
				},
				"HDL.linting.modelsim.arguments": {
					"scope": "window",
					"type": "string",
					"default": "",
					"description": "Add Modelsim arguments here. They will be added to Modelsim while linting."
				},
				"HDL.linting.modelsim.runAtFileLocation": {
					"scope": "window",
					"type": "boolean",
					"default": false,
					"description": "If enabled, Modelsim will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default."
				},
				"HDL.linting.verilator.arguments": {
					"scope": "window",
					"type": "string",
					"default": "",
					"description": "Add Verilator arguments here (like macros). They will be added to Verilator while linting (The command \"--lint-only -I<document folder>\" will be added by the linter by default)"
				},
				"HDL.linting.verilator.runAtFileLocation": {
					"scope": "window",
					"type": "boolean",
					"default": false,
					"description": "If enabled, Verilator will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default."
				},
				"HDL.linting.modelsim.work": {
					"scope": "window",
					"type": "string",
					"default": "",
					"description": "Add Modelsim work library here."
				},
				"HDL.ctags.path": {
					"scope": "window",
					"type": "string",
					"default": "ctags",
					"description": "A path to the installation of Universal Ctags"
				},
				"HDL.logging.enabled": {
					"scope": "window",
					"type": "boolean",
					"default": false,
					"description": "Enable logging for this extension"
				},
				"TOOL.SerialPortMonitor.BaudRate": {
					"type": "integer",
					"scope": "resource",
					"markdownDescription": "SerialPort Baud Rate",
					"default": "115200",
					"enum": [
						"1382400",
						"921600",
						"460800",
						"256000",
						"230400",
						"128000",
						"115200",
						"9600",
						"4800",
						"2400",
						"1200"
					]
				},
				"TOOL.SerialPortMonitor.DataBits": {
					"type": "string",
					"scope": "resource",
					"markdownDescription": "SerialPort Data Bits width",
					"default": "8",
					"enum": [
						"5",
						"6",
						"7",
						"8"
					]
				},
				"TOOL.SerialPortMonitor.Parity": {
					"type": "string",
					"scope": "resource",
					"markdownDescription": "SerialPort Parity bit",
					"default": "None",
					"enum": [
						"None",
						"Odd",
						"Even",
						"Mark",
						"Space"
					]
				},
				"TOOL.SerialPortMonitor.StopBits": {
					"type": "string",
					"scope": "resource",
					"markdownDescription": "SerialPort Stop Bits",
					"default": "1",
					"enum": [
						"1",
						"1.5",
						"2"
					],
					"enumDescriptions": [
						"One",
						"Two",
						"OnePointFive"
					]
				}
			}
		},		
		"viewsContainers": {
			"activitybar": [
				{
					"id": "TOOL",
					"title": "FPGA Tool",
					"icon": "images/svg/FPGAs.svg"
				}
			]
		},
		"views": {
			"TOOL": [
				{
					"id": "TOOL.Tool_options",
					"name": "Tool"
				},
				{
					"id": "TOOL.fpga_options",
					"name": "FPGA Options"
				},
				{
					"id": "TOOL.sdk_options",
					"name": "SDK Options"
				}
			]
		},
		"languages": [
			{
				"id": "tcl",
				"aliases": [
					"TCL",
					"Xilinx Constraints File",
					"Synopsis Constraints File"
				],
				"extensions": [
					".tcl",
					".sdc",
					".xdc",
					".fdc"
				],
				"configuration": "./config/tcl.configuration.json"
			},
			{
				"id": "vhdl",
				"aliases": [
					"VHDL",
					"vhdl"
				],
				"extensions": [
					".vhd",
					".vhdl",
					".vho",
					".vht"
				],
				"configuration": "./config/vhdl.configuration.json"
			},
			{
				"id": "verilog",
				"aliases": [
					"Verilog",
					"verilog"
				],
				"extensions": [
					".v",
					".V",
					".vh",
					".vl"
				],
				"configuration": "./config/verilog.configuration.json"
			},
			{
				"id": "systemverilog",
				"aliases": [
					"System Verilog",
					"systemverilog"
				],
				"extensions": [
					".sv",
					".SV"
				],
				"configuration": "./config/systemverilog.configuration.json"
			}
		],
		"jsonValidation": [
			{
				"fileMatch": "**/Property.json",
				"url": "./src/.TOOL/Property.json"
			}
		],
		"grammars": [
			{
				"language": "tcl",
				"scopeName": "source.tcl",
				"path": "./syntaxes/tcl.json"
			},
			{
				"language": "vhdl",
				"scopeName": "source.vhdl",
				"path": "./syntaxes/vhdl.json"
			},
			{
				"language": "verilog",
				"scopeName": "source.verilog",
				"path": "./syntaxes/verilog.json"
			},
			{
				"language": "systemverilog",
				"scopeName": "source.systemverilog",
				"path": "./syntaxes/systemverilog.json"
			}
		],
		"snippets": [
			{
				"language": "tcl",
				"path": "./snippets/tcl.json"
			},
			{
				"language": "vhdl",
				"path": "./snippets/vhdl.json"
			},
			{
				"language": "verilog",
				"path": "./snippets/verilog.json"
			},
			{
				"language": "systemverilog",
				"path": "./snippets/systemverilog.json"
			}
		],
		"commands": [
			{
				"command": "TOOL.Gen_Property",
				"title": "generate Property file",
				"category": "TOOL"
			},
			{
				"command": "TOOL.Gen_BOOT",
				"title": "Gen_BOOT",
				"category": "TOOL"
			},
			{
				"command": "TOOL.clean",
				"title": "clean",
				"category": "TOOL"
			},
			{
				"command": "TOOL.SerialPort",
				"title": "Serial monitor",
				"category": "TOOL"
			},
			{
				"command": "FPGA.instance",
				"title": "Instance",
				"category": "FPGA"
			},
			{
				"command": "FPGA.testbench",
				"title": "Testbench",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Init",
				"title": "Init",
				"category": "FPGA"
			},
			{
				"command": "FPGA.top",
				"title": "Set as top",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Update",
				"title": "Update designed file",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Sim",
				"title": "Run the Simulation",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Build",
				"title": "Build the current fpga project",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Synth",
				"title": "Synth the current fpga project",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Impl",
				"title": "Impl the current fpga project",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Gen_Bit",
				"title": "Generate the bit file",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Program",
				"title": "Download the bit file into the device",
				"category": "FPGA"
			},
			{
				"command": "FPGA.GUI",
				"title": "Open the GUI",
				"category": "FPGA"
			},
			{
				"command": "FPGA.exit",
				"title": "Exit the current project",
				"category": "FPGA"
			},
			{
				"command": "FPGA.addDevice",
				"title": "Add devices to the database",
				"category": "FPGA"
			},
			{
				"command": "FPGA.delDevice",
				"title": "Remove the device from the database",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Overwrite testbench",
				"title": "Overwrite the template of testbench",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Overwrite bd_file",
				"title": "Overwrite the bd_file",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Add bd_file",
				"title": "Add a bd_file",
				"category": "FPGA"
			},
			{
				"command": "FPGA.Delete bd_file",
				"title": "Delete the bd_file",
				"category": "FPGA"
			},
			{
				"command": "SDK.Init",
				"title": "Init",
				"category": "SDK"
			},
			{
				"command": "SDK.Build",
				"title": "Build",
				"category": "SDK"
			},
			{
				"command": "SDK.Download",
				"title": "Download",
				"category": "SDK"
			}
		],
		"keybindings": [
			{
				"command": "FPGA.Init",
				"key": "Alt+z",
				"mac": "Alt+z",
				"when": "editorTextFocus"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "editorLangId == verilog || editorLangId == systemverilog || editorLangId == vhdl",
					"command": "FPGA.top",
					"group": "navigation@1"
				},
				{
					"when": "editorLangId == verilog || editorLangId == systemverilog",
					"command": "FPGA.testbench",
					"group": "navigation@2"
				},
				{
					"when": "editorLangId == verilog || editorLangId == systemverilog",
					"command": "FPGA.instance",
					"group": "navigation@3"
				}
			]
		}
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.1",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.42.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.0.1",
		"typescript": "^3.7.5",
		"vscode-test": "^1.3.0"
	}
}
